Sort [s_name#351 ASC NULLS FIRST], true
+- Project [s_name#351, s_address#352]
   +- Join Inner, (ps_suppkey#313L = s_suppkey#350L)
      :- Aggregate [ps_suppkey#313L], [ps_suppkey#313L]
      :  +- Project [ps_suppkey#313L]
      :     +- Join Inner, (((ps_suppkey#313L = l_suppkey#81L) AND (ps_partkey#312L = l_partkey#80L)) AND (cast(ps_availqty#314L as double) > sum_quantity#391))
      :        :- Project [ps_partkey#312L, ps_suppkey#313L, ps_availqty#314L]
      :        :  +- Join Inner, (p_partkey#264L = ps_partkey#312L)
      :        :     :- Aggregate [p_partkey#264L], [p_partkey#264L]
      :        :     :  +- Project [p_partkey#264L]
      :        :     :     +- Filter UDF(p_name#265)
      :        :     :        +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Part, true])).p_partkey AS p_partkey#264L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Part, true])).p_name, true, false, true) AS p_name#265, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Part, true])).p_mfgr, true, false, true) AS p_mfgr#266, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Part, true])).p_brand, true, false, true) AS p_brand#267, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Part, true])).p_type, true, false, true) AS p_type#268, knownnotnull(assertnotnull(input[0, main.scala.Part, true])).p_size AS p_size#269L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Part, true])).p_container, true, false, true) AS p_container#270, knownnotnull(assertnotnull(input[0, main.scala.Part, true])).p_retailprice AS p_retailprice#271, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Part, true])).p_comment, true, false, true) AS p_comment#272]
      :        :     :           +- MapElements main.scala.TpchSchemaProvider$$Lambda$1807/0x0000000840dba040@45a40353, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#263: main.scala.Part
      :        :     :              +- MapElements main.scala.TpchSchemaProvider$$Lambda$1806/0x0000000840db9840@41ae9f11, class java.lang.String, [StructField(value,StringType,true)], obj#249: [Ljava.lang.String;
      :        :     :                 +- DeserializeToObject value#240.toString, obj#248: java.lang.String
      :        :     :                    +- Relation [value#240] text
      :        :     +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Partsupp, true])).ps_partkey AS ps_partkey#312L, knownnotnull(assertnotnull(input[0, main.scala.Partsupp, true])).ps_suppkey AS ps_suppkey#313L, knownnotnull(assertnotnull(input[0, main.scala.Partsupp, true])).ps_availqty AS ps_availqty#314L]
      :        :        +- MapElements main.scala.TpchSchemaProvider$$Lambda$1809/0x0000000840dbb840@fe337, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#311: main.scala.Partsupp
      :        :           +- MapElements main.scala.TpchSchemaProvider$$Lambda$1808/0x0000000840dbb040@33efa7d4, class java.lang.String, [StructField(value,StringType,true)], obj#301: [Ljava.lang.String;
      :        :              +- DeserializeToObject value#292.toString, obj#300: java.lang.String
      :        :                 +- Relation [value#292] text
      :        +- Filter isnotnull(sum_quantity#391)
      :           +- Aggregate [l_partkey#80L, l_suppkey#81L], [l_partkey#80L, l_suppkey#81L, (sum(l_quantity#83) * 0.5) AS sum_quantity#391]
      :              +- Project [l_partkey#80L, l_suppkey#81L, l_quantity#83]
      :                 +- Filter (isnotnull(l_shipdate#89) AND ((l_shipdate#89 >= 1994-01-01) AND (l_shipdate#89 < 1995-01-01)))
      :                    +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_orderkey AS l_orderkey#79L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_partkey AS l_partkey#80L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_suppkey AS l_suppkey#81L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_linenumber AS l_linenumber#82L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_quantity AS l_quantity#83, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_extendedprice AS l_extendedprice#84, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_discount AS l_discount#85, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_tax AS l_tax#86, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_returnflag, true, false, true) AS l_returnflag#87, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_linestatus, true, false, true) AS l_linestatus#88, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipdate, true, false, true) AS l_shipdate#89, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_commitdate, true, false, true) AS l_commitdate#90, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_receiptdate, true, false, true) AS l_receiptdate#91, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipinstruct, true, false, true) AS l_shipinstruct#92, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipmode, true, false, true) AS l_shipmode#93, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_comment, true, false, true) AS l_comment#94]
      :                       +- MapElements main.scala.TpchSchemaProvider$$Lambda$1799/0x0000000840daf040@3c130cb2, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#78: main.scala.Lineitem
      :                          +- MapElements main.scala.TpchSchemaProvider$$Lambda$1798/0x0000000840dab040@1f5a1ad4, class java.lang.String, [StructField(value,StringType,true)], obj#57: [Ljava.lang.String;
      :                             +- DeserializeToObject value#48.toString, obj#56: java.lang.String
      :                                +- Relation [value#48] text
      +- Project [s_suppkey#350L, s_name#351, s_address#352]
         +- Join Inner, (s_nationkey#353L = n_nationkey#147L)
            :- Project [s_suppkey#350L, s_name#351, s_nationkey#353L, s_address#352]
            :  +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Supplier, true])).s_suppkey AS s_suppkey#350L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Supplier, true])).s_name, true, false, true) AS s_name#351, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Supplier, true])).s_address, true, false, true) AS s_address#352, knownnotnull(assertnotnull(input[0, main.scala.Supplier, true])).s_nationkey AS s_nationkey#353L]
            :     +- MapElements main.scala.TpchSchemaProvider$$Lambda$1811/0x0000000840dc1840@1d77d9c6, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#349: main.scala.Supplier
            :        +- MapElements main.scala.TpchSchemaProvider$$Lambda$1810/0x0000000840dc0840@2af1bf5a, class java.lang.String, [StructField(value,StringType,true)], obj#337: [Ljava.lang.String;
            :           +- DeserializeToObject value#328.toString, obj#336: java.lang.String
            :              +- Relation [value#328] text
            +- Project [n_nationkey#147L]
               +- Filter (isnotnull(n_name#148) AND (n_name#148 = CANADA))
                  +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Nation, true])).n_nationkey AS n_nationkey#147L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Nation, true])).n_name, true, false, true) AS n_name#148, knownnotnull(assertnotnull(input[0, main.scala.Nation, true])).n_regionkey AS n_regionkey#149L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Nation, true])).n_comment, true, false, true) AS n_comment#150]
                     +- MapElements main.scala.TpchSchemaProvider$$Lambda$1801/0x0000000840dad840@160d68b8, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#146: main.scala.Nation
                        +- MapElements main.scala.TpchSchemaProvider$$Lambda$1800/0x0000000840dae040@603a34e5, class java.lang.String, [StructField(value,StringType,true)], obj#137: [Ljava.lang.String;
                           +- DeserializeToObject value#128.toString, obj#136: java.lang.String
                              +- Relation [value#128] text
