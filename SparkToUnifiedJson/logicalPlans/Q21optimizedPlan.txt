GlobalLimit 100
+- LocalLimit 100
   +- Sort [numwait#535L DESC NULLS LAST, s_name#351 ASC NULLS FIRST], true
      +- Aggregate [s_name#351], [s_name#351, count(1) AS numwait#535L]
         +- Project [s_name#351]
            +- Join Inner, ((l_suppkey#81L = suppkey_max#400L) AND (l_orderkey#79L = key#405L))
               :- Project [s_name#351, l_orderkey#79L, l_suppkey#81L]
               :  +- Join Inner, (l_orderkey#79L = key#390L)
               :     :- Project [s_name#351, l_suppkey#81L, l_orderkey#79L]
               :     :  +- Join Inner, (l_orderkey#79L = o_orderkey#212L)
               :     :     :- Project [s_name#351, l_suppkey#81L, l_orderkey#79L]
               :     :     :  +- Join Inner, (s_suppkey#350L = l_suppkey#81L)
               :     :     :     :- Project [s_suppkey#350L, s_name#351]
               :     :     :     :  +- Join Inner, (n_nationkey#147L = s_nationkey#353L)
               :     :     :     :     :- Project [n_nationkey#147L]
               :     :     :     :     :  +- Filter (isnotnull(n_name#148) AND (n_name#148 = SAUDI ARABIA))
               :     :     :     :     :     +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Nation, true])).n_nationkey AS n_nationkey#147L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Nation, true])).n_name, true, false, true) AS n_name#148, knownnotnull(assertnotnull(input[0, main.scala.Nation, true])).n_regionkey AS n_regionkey#149L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Nation, true])).n_comment, true, false, true) AS n_comment#150]
               :     :     :     :     :        +- MapElements main.scala.TpchSchemaProvider$$Lambda$1802/0x0000000840dad840@1dc28c66, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#146: main.scala.Nation
               :     :     :     :     :           +- MapElements main.scala.TpchSchemaProvider$$Lambda$1801/0x0000000840dae840@2dc72c0c, class java.lang.String, [StructField(value,StringType,true)], obj#137: [Ljava.lang.String;
               :     :     :     :     :              +- DeserializeToObject value#128.toString, obj#136: java.lang.String
               :     :     :     :     :                 +- Relation [value#128] text
               :     :     :     :     +- Project [s_suppkey#350L, s_nationkey#353L, s_name#351]
               :     :     :     :        +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Supplier, true])).s_suppkey AS s_suppkey#350L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Supplier, true])).s_name, true, false, true) AS s_name#351, knownnotnull(assertnotnull(input[0, main.scala.Supplier, true])).s_nationkey AS s_nationkey#353L]
               :     :     :     :           +- MapElements main.scala.TpchSchemaProvider$$Lambda$1812/0x0000000840dc1840@7a25f8ee, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#349: main.scala.Supplier
               :     :     :     :              +- MapElements main.scala.TpchSchemaProvider$$Lambda$1811/0x0000000840dc1040@7f97e963, class java.lang.String, [StructField(value,StringType,true)], obj#337: [Ljava.lang.String;
               :     :     :     :                 +- DeserializeToObject value#328.toString, obj#336: java.lang.String
               :     :     :     :                    +- Relation [value#328] text
               :     :     :     +- Project [l_suppkey#81L, l_orderkey#79L]
               :     :     :        +- Filter ((isnotnull(l_receiptdate#91) AND isnotnull(l_commitdate#90)) AND (l_receiptdate#91 > l_commitdate#90))
               :     :     :           +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_orderkey AS l_orderkey#79L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_partkey AS l_partkey#80L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_suppkey AS l_suppkey#81L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_linenumber AS l_linenumber#82L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_quantity AS l_quantity#83, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_extendedprice AS l_extendedprice#84, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_discount AS l_discount#85, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_tax AS l_tax#86, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_returnflag, true, false, true) AS l_returnflag#87, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_linestatus, true, false, true) AS l_linestatus#88, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipdate, true, false, true) AS l_shipdate#89, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_commitdate, true, false, true) AS l_commitdate#90, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_receiptdate, true, false, true) AS l_receiptdate#91, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipinstruct, true, false, true) AS l_shipinstruct#92, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipmode, true, false, true) AS l_shipmode#93, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_comment, true, false, true) AS l_comment#94]
               :     :     :              +- MapElements main.scala.TpchSchemaProvider$$Lambda$1800/0x0000000840daf840@6408a8ac, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#78: main.scala.Lineitem
               :     :     :                 +- MapElements main.scala.TpchSchemaProvider$$Lambda$1799/0x0000000840dab840@6df4d8f1, class java.lang.String, [StructField(value,StringType,true)], obj#57: [Ljava.lang.String;
               :     :     :                    +- DeserializeToObject value#48.toString, obj#56: java.lang.String
               :     :     :                       +- Relation [value#48] text
               :     :     +- Project [o_orderkey#212L]
               :     :        +- Filter (isnotnull(o_orderstatus#214) AND (o_orderstatus#214 = F))
               :     :           +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_orderkey AS o_orderkey#212L, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_custkey AS o_custkey#213L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_orderstatus, true, false, true) AS o_orderstatus#214, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_totalprice AS o_totalprice#215, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_orderdate, true, false, true) AS o_orderdate#216, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_orderpriority, true, false, true) AS o_orderpriority#217, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_clerk, true, false, true) AS o_clerk#218, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_shippriority AS o_shippriority#219L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_comment, true, false, true) AS o_comment#220]
               :     :              +- MapElements main.scala.TpchSchemaProvider$$Lambda$1806/0x0000000840db9040@7acf07b2, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#211: main.scala.Order
               :     :                 +- MapElements main.scala.TpchSchemaProvider$$Lambda$1805/0x0000000840db8040@74ed1d35, class java.lang.String, [StructField(value,StringType,true)], obj#197: [Ljava.lang.String;
               :     :                    +- DeserializeToObject value#188.toString, obj#196: java.lang.String
               :     :                       +- Relation [value#188] text
               :     +- Project [l_orderkey#79L AS key#390L]
               :        +- Filter (suppkey_count#383L > 1)
               :           +- Aggregate [l_orderkey#79L], [l_orderkey#79L, count(distinct l_suppkey#81L) AS suppkey_count#383L]
               :              +- Project [l_suppkey#81L, l_orderkey#79L]
               :                 +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_orderkey AS l_orderkey#79L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_suppkey AS l_suppkey#81L]
               :                    +- MapElements main.scala.TpchSchemaProvider$$Lambda$1800/0x0000000840daf840@6408a8ac, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#78: main.scala.Lineitem
               :                       +- MapElements main.scala.TpchSchemaProvider$$Lambda$1799/0x0000000840dab840@6df4d8f1, class java.lang.String, [StructField(value,StringType,true)], obj#57: [Ljava.lang.String;
               :                          +- DeserializeToObject value#473.toString, obj#56: java.lang.String
               :                             +- Relation [value#473] text
               +- Project [key#405L, suppkey_max#400L]
                  +- Filter ((suppkey_count#398L = 1) AND isnotnull(suppkey_max#400L))
                     +- Aggregate [l_orderkey#79L], [l_orderkey#79L AS key#405L, count(distinct l_suppkey#81L) AS suppkey_count#398L, max(l_suppkey#81L) AS suppkey_max#400L]
                        +- Project [l_suppkey#81L, l_orderkey#79L]
                           +- Filter ((isnotnull(l_receiptdate#91) AND isnotnull(l_commitdate#90)) AND (l_receiptdate#91 > l_commitdate#90))
                              +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_orderkey AS l_orderkey#79L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_partkey AS l_partkey#80L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_suppkey AS l_suppkey#81L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_linenumber AS l_linenumber#82L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_quantity AS l_quantity#83, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_extendedprice AS l_extendedprice#84, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_discount AS l_discount#85, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_tax AS l_tax#86, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_returnflag, true, false, true) AS l_returnflag#87, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_linestatus, true, false, true) AS l_linestatus#88, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipdate, true, false, true) AS l_shipdate#89, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_commitdate, true, false, true) AS l_commitdate#90, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_receiptdate, true, false, true) AS l_receiptdate#91, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipinstruct, true, false, true) AS l_shipinstruct#92, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipmode, true, false, true) AS l_shipmode#93, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_comment, true, false, true) AS l_comment#94]
                                 +- MapElements main.scala.TpchSchemaProvider$$Lambda$1800/0x0000000840daf840@6408a8ac, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#78: main.scala.Lineitem
                                    +- MapElements main.scala.TpchSchemaProvider$$Lambda$1799/0x0000000840dab840@6df4d8f1, class java.lang.String, [StructField(value,StringType,true)], obj#57: [Ljava.lang.String;
                                       +- DeserializeToObject value#510.toString, obj#56: java.lang.String
                                          +- Relation [value#510] text
