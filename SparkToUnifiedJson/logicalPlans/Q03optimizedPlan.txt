GlobalLimit 10
+- LocalLimit 10
   +- Sort [revenue#890 DESC NULLS LAST, o_orderdate#216 ASC NULLS FIRST], true
      +- Aggregate [l_orderkey#79L, o_orderdate#216, o_shippriority#219L], [l_orderkey#79L, o_orderdate#216, o_shippriority#219L, sum(volume#874) AS revenue#890]
         +- Project [l_orderkey#79L, UDF(l_extendedprice#84, l_discount#85) AS volume#874, o_orderdate#216, o_shippriority#219L]
            +- Join Inner, (o_orderkey#212L = l_orderkey#79L)
               :- Project [o_orderkey#212L, o_orderdate#216, o_shippriority#219L]
               :  +- Join Inner, (c_custkey#23L = o_custkey#213L)
               :     :- Project [c_custkey#23L]
               :     :  +- Filter (isnotnull(c_mktsegment#29) AND (c_mktsegment#29 = BUILDING))
               :     :     +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Customer, true])).c_custkey AS c_custkey#23L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Customer, true])).c_name, true, false, true) AS c_name#24, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Customer, true])).c_address, true, false, true) AS c_address#25, knownnotnull(assertnotnull(input[0, main.scala.Customer, true])).c_nationkey AS c_nationkey#26L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Customer, true])).c_phone, true, false, true) AS c_phone#27, knownnotnull(assertnotnull(input[0, main.scala.Customer, true])).c_acctbal AS c_acctbal#28, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Customer, true])).c_mktsegment, true, false, true) AS c_mktsegment#29, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Customer, true])).c_comment, true, false, true) AS c_comment#30]
               :     :        +- MapElements main.scala.TpchSchemaProvider$$Lambda$1682/0x0000000840d09840@499445d2, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#22: main.scala.Customer
               :     :           +- MapElements main.scala.TpchSchemaProvider$$Lambda$1657/0x0000000840cf6040@3ba015b1, class java.lang.String, [StructField(value,StringType,true)], obj#9: [Ljava.lang.String;
               :     :              +- DeserializeToObject value#0.toString, obj#8: java.lang.String
               :     :                 +- Relation [value#0] text
               :     +- Project [o_orderkey#212L, o_custkey#213L, o_orderdate#216, o_shippriority#219L]
               :        +- Filter (isnotnull(o_orderdate#216) AND (o_orderdate#216 < 1995-03-15))
               :           +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_orderkey AS o_orderkey#212L, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_custkey AS o_custkey#213L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_orderstatus, true, false, true) AS o_orderstatus#214, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_totalprice AS o_totalprice#215, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_orderdate, true, false, true) AS o_orderdate#216, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_orderpriority, true, false, true) AS o_orderpriority#217, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_clerk, true, false, true) AS o_clerk#218, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_shippriority AS o_shippriority#219L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Order, true])).o_comment, true, false, true) AS o_comment#220]
               :              +- MapElements main.scala.TpchSchemaProvider$$Lambda$1706/0x0000000840d22840@753c7411, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#211: main.scala.Order
               :                 +- MapElements main.scala.TpchSchemaProvider$$Lambda$1705/0x0000000840d21840@6ebf9c2d, class java.lang.String, [StructField(value,StringType,true)], obj#197: [Ljava.lang.String;
               :                    +- DeserializeToObject value#188.toString, obj#196: java.lang.String
               :                       +- Relation [value#188] text
               +- Project [l_orderkey#79L, l_extendedprice#84, l_discount#85]
                  +- Filter (isnotnull(l_shipdate#89) AND (l_shipdate#89 > 1995-03-15))
                     +- SerializeFromObject [knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_orderkey AS l_orderkey#79L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_partkey AS l_partkey#80L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_suppkey AS l_suppkey#81L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_linenumber AS l_linenumber#82L, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_quantity AS l_quantity#83, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_extendedprice AS l_extendedprice#84, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_discount AS l_discount#85, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_tax AS l_tax#86, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_returnflag, true, false, true) AS l_returnflag#87, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_linestatus, true, false, true) AS l_linestatus#88, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipdate, true, false, true) AS l_shipdate#89, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_commitdate, true, false, true) AS l_commitdate#90, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_receiptdate, true, false, true) AS l_receiptdate#91, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipinstruct, true, false, true) AS l_shipinstruct#92, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_shipmode, true, false, true) AS l_shipmode#93, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, main.scala.Lineitem, true])).l_comment, true, false, true) AS l_comment#94]
                        +- MapElements main.scala.TpchSchemaProvider$$Lambda$1700/0x0000000840d17840@2835b3d1, class [Ljava.lang.String;, [StructField(value,ArrayType(StringType,true),true)], obj#78: main.scala.Lineitem
                           +- MapElements main.scala.TpchSchemaProvider$$Lambda$1699/0x0000000840d15040@690c3b1f, class java.lang.String, [StructField(value,StringType,true)], obj#57: [Ljava.lang.String;
                              +- DeserializeToObject value#48.toString, obj#56: java.lang.String
                                 +- Relation [value#48] text
